常用command line
安装
$ sudo apt-get install nginx

卸载 
$ sudo apt-get remove nginx

查找 
$ whereis nginx

重启nginx
$ sudo service nginx restart

重启mysql 
$ sudo /etc/init.d/mysql restart

显示桌面
Ctrl+Win+d

删除文件
rm index.html -r

-------------------------------------------------
ngnix+php 配置
-------------------------------------------------
安装php7.0
sudo apt install php7.0-fpm
修改
/etc/php/7.0/fpm/pool.d
user=zzh
group=zzh
listen.owner = zzh
listen.group = zzh
-------------------------------------------------
安装nginx
sudo apt-get install nginx
修改 nginx.conf
user zzh; 
修改 site-enabled/default
例子
server {
	listen 80;
	listen [::]:80;

	root /var/www;//网站目录

	server_name localhost;

	location / {
		try_files $uri /index.php$is_args$args;
		index index.php; 
	}

	location ~ \.php$ {
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;

		include fastcgi_params;
		fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		fastcgi_param   SCRIPT_NAME        $fastcgi_script_name; 
	}

	location ~ /\.ht {
		deny all;
	}
}
-------------------------------------------------
配置修改后的重启命令
sudo nginx -s reload
sudo service php7.0-fpm restart
-------------------------------------------------
搜索包
sudo apt search php7.0
安装包
sudo apt install php7.0-包名
-------------------------------------------------

相关文件
/etc/passwd 系统账户和普通账户信息记录
/etc/shadow 个人密码
/etc/group  用户组名称记录

查看文件目录
$ ls [参数] [文件/目录]
-a 表示列出所有的文件，包括以"."开头的隐藏文件

-d 如果其后接的是一个目录，则此只输出目录的名称

-l 表示以清单的形式列出文件的条目，包括文件的名称、权限、拥有者、大小、最后修改时间等

-t 表示列出的条目按最后修改的时间进行排序，默认是使用文件夹的名称来排序

-C 以文件的名称按列纵向排序

-F 在文件名后加一个符号来表示文件类型

-al 列出文件并显示其权限用户组等信息
drwxrwxr-x  3 zzh zzh 4096 Oct  9 19:30 Controllers
-rw-rw-r--  1 zzh zzh 1537 Apr 27  2016 Kernel.php

drwxrwxr-x 共10位 分为 d rwx rwx r-x 4部分
第一部分：文件类型
[d]目录
[-]普通文件（末尾会带上文件名）
[l]连接文件
[b]设备文件
第二部分：所有者权限
第三部分：用户组权限
第四部分：访问者权限
r 读
w 写
x 改

3
连接数

zzh
所有者

zzh
用户组

4096
文件大小

Oct  9 19:30 
最后修改时间

Controllers
文件名

ctrl+h 显示隐藏文件( '.' 开头)


top指令
---------------------------------
　　PID：进程的ID
　　USER：进程所有者
　　PR：进程的优先级别，越小越优先被执行
　　NInice：值
　　VIRT：进程占用的虚拟内存
　　RES：进程占用的物理内存
　　SHR：进程使用的共享内存
　　S：进程的状态。S表示休眠，R表示正在运行，Z表示僵死状态，N表示该进程优先值为负数
　　%CPU：进程占用CPU的使用率
　　%MEM：进程使用的物理内存和总内存的百分比
　　TIME+：该进程启动后占用的总的CPU时间，即占用CPU使用时间的累加值。
　　COMMAND：进程启动命令名称



top - 14:47:09 up  3:30,  1 user,  load average: 0.42, 0.16, 0.05
//  系统当前时刻 运作时间 用户数  
//  “load average”为当前系统负载的平均值，
//  后面的三个值分别为1分钟前、5分钟前、15分钟前进程的平均数，
//  一般的可以认为这个数值超过 CPU 数目时，CPU 将比较吃力的负载当前系统所包含的进程；

Tasks: 272 total,   1 running, 271 sleeping,   0 stopped,   0 zombie
// 　　　　“total”为当前系统进程总数；
// 　　　　“running”为当前运行中的进程数；
// 　　　　“sleeping”为当前处于等待状态中的进程数；
// 　　　　“stoped”为被停止的系统进程数；
// 　　　　“zombie”为被复原的进程数；

%Cpu(s):  0.2 us,  0.3 sy,  0.0 ni, 99.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
// 分别表示了 CPU 当前的使用率；

KiB Mem :  2030608 total,    80768 free,  1209836 used,   740004 buff/cache
// 内存总量、当前使用量、空闲内存量、以及缓冲使用中的内存量；

KiB Swap:  1046524 total,   735836 free,   310688 used.   544816 avail Mem 
// 表示类别同第四行（Mem），但此处反映着交换分区（Swap）的使用情况。
// 通常，交换分区（Swap）被频繁使用的情况，将被视作物理内存不足而造成的。

   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                         
  2362 zzh       20   0 1533228 140372  23164 S   1.3  6.9   1:41.24 compiz                                                          
  1166 root      20   0  402288  48612  24752 S   0.7  2.4   1:16.63 Xorg                                                            
  1168 redis     20   0   47204   6272   2240 S   0.3  0.3   0:12.58 redis-server                                                    
  3641 zzh       20   0  661696  23376  12072 S   0.3  1.2   0:09.59 gnome-terminal-                                                 
  4430 zzh       20   0 1155036 205668  65108 S   0.3 10.1   0:41.90 firefox                                                         
  7030 zzh       20   0   49016   3736   2976 R   0.3  0.2   0:00.10 top                                                             
     1 root      20   0  119828   4976   3240 S   0.0  0.2   0:03.25 systemd                                                         
     2 root      20   0       0      0      0 S   0.0  0.0   0:00.01 kthreadd                                                        
     3 root      20   0       0      0      0 S   0.0  0.0   0:00.17 ksoftirqd/0                                                     
     5 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 kworker/0:0H                                                    
     7 root      20   0       0      0      0 S   0.0  0.0   0:14.84 rcu_sched                                                       
     8 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcu_bh                                                          
     9 root      rt   0       0      0      0 S   0.0  0.0   0:00.02 migration/0                                                     
    10 root      rt   0       0      0      0 S   0.0  0.0   0:00.04 watchdog/0     
    ...

------------------------------------------------------------------------------
权限修改
sudo chown -R www-data 文件夹
sudo chmod -R 0770 文件夹
------------------------------------------------------------------------------
mysql 数据库建立
终端数据库连接
mysql -u root -p
Enter password:
输入创建语句
create database [数据库名称]
切换数据库
use mydatabase;
显示所有表
show tables;
------------------------------------------------------------------------------
创建svn
$ sudo apt-get install subversion

创建用户组
sudo addgroup subversion

添加www-data用户到用户组
sudo usermod -G subversion -a www-data

查看添加结果
cat /etc/group|grep subversion

赋予目录拥有者(目录名为myproject)
sudo chown -R www-data:subversion myproject

创建版本仓库
sudo svnadmin create /home/svn/myproject

设置文件目录访问权限
sudo  chmod -R g+rws myproject/

修改库中svnserve.conf文件
anon-access = none
auth-access = write
password-db = passwd
authz-db = authz
realm = myproject

修改库中passwd文件
[users]
zzh1993 = admin123

在authz中添加组和权限
[/]
zzh1993=rw

启动svn
svnserve -d -r 目录

svn检出
svn co svn://localhost/目录

------------------------------------------------------------------------------
